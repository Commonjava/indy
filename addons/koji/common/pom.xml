<?xml version="1.0"?>
<!--

    Copyright (C) 2011-2023 Red Hat, Inc. (https://github.com/Commonjava/indy)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.commonjava.indy</groupId>
    <artifactId>indy-koji</artifactId>
    <version>3.4.5-SNAPSHOT</version>
  </parent>
  <artifactId>indy-koji-common</artifactId>
  <name>Indy :: Add-Ons :: Koji Integration :: Common</name>

  <properties>
    <dbImage>postgres:9.4</dbImage>
    <hubImage>docker.io/buildchimp/koji-dojo-hub</hubImage>

    <dbWaitFor>database system is ready to accept connections</dbWaitFor>
    <hubWaitFor>Starting HTTPd</hubWaitFor>

    <dockerProvider>local</dockerProvider>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.commonjava.indy</groupId>
      <artifactId>indy-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.commonjava.indy</groupId>
      <artifactId>indy-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.commonjava.indy</groupId>
      <artifactId>indy-pkg-maven-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.commonjava.indy</groupId>
      <artifactId>indy-db-memory</artifactId>
    </dependency>
    <dependency>
      <groupId>org.commonjava.indy</groupId>
      <artifactId>indy-filer-default</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.commonjava.indy</groupId>
      <artifactId>indy-subsys-http</artifactId>
    </dependency>
    <dependency>
      <groupId>org.commonjava.indy</groupId>
      <artifactId>indy-subsys-infinispan</artifactId>
    </dependency>
    <dependency>
      <groupId>org.commonjava.indy</groupId>
      <artifactId>indy-subsys-groovy</artifactId>
    </dependency>
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
    </dependency>

    <dependency>
      <groupId>org.commonjava.util</groupId>
      <artifactId>jhttpc</artifactId>
    </dependency>

    <dependency>
      <groupId>org.commonjava.rwx</groupId>
      <artifactId>rwx</artifactId>
    </dependency>

    <dependency>
      <groupId>com.redhat.red.build</groupId>
      <artifactId>kojiji</artifactId>
    </dependency>

    <dependency>
      <groupId>org.commonjava.indy.service</groupId>
      <artifactId>indy-koji-model-java</artifactId>
    </dependency>
    <dependency>
      <groupId>org.commonjava.indy</groupId>
      <artifactId>indy-test-fixtures-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.commonjava.indy</groupId>
      <artifactId>indy-subsys-metrics</artifactId>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <!-- See: https://github.com/wouterd/docker-maven-plugin -->
          <groupId>net.wouterdanes.docker</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>start-IT-containers</id>
              <goals>
                <goal>start-containers</goal>
              </goals>
              <phase>pre-integration-test</phase>
              <configuration>
                <!-- <forceCleanup>false</forceCleanup> -->
                <providerName>${dockerProvider}</providerName>
                <containers>
                  <container>
                    <id>koji-db</id>
                    <image>${dbImage}</image>
                    <env>
                      <POSTGRES_DB>koji</POSTGRES_DB>
                      <POSTGRES_USER>koji</POSTGRES_USER>
                      <POSTGRES_PASSWORD>mypassword</POSTGRES_PASSWORD>
                    </env>
                    <waitForStartup>${dbWaitFor}</waitForStartup>
                  </container>
                  <container>
                    <id>koji-hub</id>
                    <image>${hubImage}</image>
                    <waitForStartup>${hubWaitFor}</waitForStartup>
                    <links>
                      <link>
                        <containerId>koji-db</containerId>
                        <containerAlias>koji-db</containerAlias>
                      </link>
                    </links>
                  </container>
                </containers>
              </configuration>
            </execution>
            <execution>
              <id>stop-IT-containers</id>
              <goals>
                <goal>stop-containers</goal>
              </goals>
              <phase>post-integration-test</phase>
              <configuration>
                <logs>${project.build.directory}/docker-logs</logs>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
          <executions>
            <execution>
              <id>record-docker-properties</id>
              <goals>
                <goal>run</goal>
              </goals>
              <phase>pre-integration-test</phase>
              <configuration>
                <target>
                  <!--suppress MavenModelInspection -->
                  <echo file="${project.build.directory}/docker.properties">
                    <![CDATA[
docker.containers.koji-hub.ports.80/tcp.host=${docker.containers.koji-hub.ports.80/tcp.host}
docker.containers.koji-hub.ports.443/tcp.host=${docker.containers.koji-hub.ports.443/tcp.host}
docker.containers.koji-hub.ports.80/tcp.port=${docker.containers.koji-hub.ports.80/tcp.port}
docker.containers.koji-hub.ports.443/tcp.port=${docker.containers.koji-hub.ports.443/tcp.port}

#javax.net.debug=ssl:handshake:verbose
]]>
                  </echo>
                </target>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.19</version>
          <executions>
            <execution>
              <id>functional-tests</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <includes>
                  <include>**/*IT.java</include>
                </includes>
                <forkCount>1C</forkCount>
                <redirectTestOutputToFile>true</redirectTestOutputToFile>
                <systemPropertiesFile>${project.build.directory}/docker.properties</systemPropertiesFile>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>confset</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <descriptorRefs>
                <descriptorRef>confset</descriptorRef>
                <descriptorRef>dataset</descriptorRef>
                <!-- <descriptorRef>uiset</descriptorRef> -->
              </descriptorRefs>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>local-its</id>

      <build>
        <plugins>
          <plugin>
            <groupId>net.wouterdanes.docker</groupId>
            <artifactId>docker-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
